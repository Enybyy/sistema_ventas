"""Link compras to proveedores table

Revision ID: 1580ba6c699a
Revises: 48725668f367
Create Date: 2025-07-03 18:10:31.342777

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1580ba6c699a'
down_revision: Union[str, Sequence[str], None] = '48725668f367'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Paso 1: Añadir la columna proveedor_id como nullable para manejar datos existentes
    op.add_column('compras', sa.Column('proveedor_id', sa.Integer(), nullable=True))

    # Paso 2: Crear un proveedor por defecto si la tabla de proveedores está vacía,
    # y obtener un ID de proveedor válido para las compras existentes.
    bind = op.get_bind()
    session = sa.orm.Session(bind=bind)
    
    # Se busca un proveedor existente. Si no hay, se crea uno genérico.
    result = session.execute(sa.text("SELECT id FROM proveedores LIMIT 1")).scalar_one_or_none()
    
    if result is None:
        # No hay proveedores, se inserta uno genérico
        op.execute("INSERT INTO proveedores (nombre) VALUES ('Proveedor Genérico')")
        # Se obtiene el ID del proveedor recién creado
        proveedor_id_para_default = session.execute(sa.text("SELECT id FROM proveedores WHERE nombre = 'Proveedor Genérico'")).scalar_one()
    else:
        # Ya existen proveedores, se usa el ID del primero encontrado
        proveedor_id_para_default = result

    # Paso 3: Asignar el ID del proveedor a todas las compras existentes
    op.execute(f"UPDATE compras SET proveedor_id = {proveedor_id_para_default}")

    # Paso 4: Ahora que todas las filas tienen un valor, se hace la columna non-nullable
    op.alter_column('compras', 'proveedor_id', existing_type=sa.Integer(), nullable=False)

    # Paso 5: Se crea la clave foránea y se elimina la columna antigua
    op.create_foreign_key('fk_compras_proveedor_id', 'compras', 'proveedores', ['proveedor_id'], ['id'])
    op.drop_column('compras', 'proveedor')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('compras', sa.Column('proveedor', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint('fk_compras_proveedor_id', 'compras', type_='foreignkey')
    op.drop_column('compras', 'proveedor_id')
    # ### end Alembic commands ###
